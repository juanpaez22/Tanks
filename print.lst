


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           ST7735_OutChar
   13 00000000                 IMPORT           ST7735_OutString
   14 00000000                 EXPORT           LCD_OutDec
   15 00000000                 EXPORT           LCD_OutFix
   16 00000000         
   17 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   18 00000000                 THUMB
   19 00000000         
   20 00000000 00000000 
                       DEC     EQU              0
   21 00000000 00000004 
                       COUNT   EQU              4
   22 00000000         
   23 00000000 00000004 
                       INT0    EQU              4           ;LSB
   24 00000000 00000008 
                       INT1    EQU              8
   25 00000000 0000000C 
                       INT2    EQU              12
   26 00000000 00000010 
                       INT3    EQU              16          ;MSB
   27 00000000         
   28 00000000         
   29 00000000         
   30 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   31 00000000         ; Output a 32-bit number in unsigned decimal format
   32 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   33 00000000         ; Output: none
   34 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   35 00000000         LCD_OutDec
   36 00000000         
   37 00000000 B082            SUB              SP, SP, #8
   38 00000002         
   39 00000002         
   40 00000002 9000            STR              R0, [SP, #DEC]
   41 00000004 F04F 0100       MOV              R1, #0
   42 00000008 9101            STR              R1, [SP, #COUNT]
   43 0000000A         
   44 0000000A         
   45 0000000A         
   46 0000000A         ; count how many times a character needs to be printed



ARM Macro Assembler    Page 2 


   47 0000000A         countloop
   48 0000000A 9901            LDR              R1, [SP, #COUNT]
   49 0000000C F101 0101       ADD              R1, #1
   50 00000010 9101            STR              R1, [SP, #COUNT]
   51 00000012 F04F 020A       MOV              R2, #10
   52 00000016 FBB0 F0F2       UDIV             R0, R0, R2
   53 0000001A 2800            CMP              R0, #0
   54 0000001C D1F5            BNE              countloop
   55 0000001E         
   56 0000001E         
   57 0000001E         
   58 0000001E         
   59 0000001E         
   60 0000001E         ;print next character
   61 0000001E         nextChar
   62 0000001E 9901            LDR              R1, [SP, #COUNT]
   63 00000020 F1A1 0101       SUB              R1, #1
   64 00000024 9101            STR              R1, [SP, #COUNT]
   65 00000026 F101 0200       ADD              R2, R1, #0
   66 0000002A F04F 0301       MOV              R3, #1      ;R3 will be what DE
                                                            C needs to be divid
                                                            ed by
   67 0000002E         
   68 0000002E         ;get number by which DEC neets to be divided
   69 0000002E         loopExp
   70 0000002E 2A00            CMP              R2, #0
   71 00000030 D006            BEQ              endexp
   72 00000032 F1A2 0201       SUB              R2, #1
   73 00000036 F04F 000A       MOV              R0, #10
   74 0000003A FB03 F300       MUL              R3, R3, R0
   75 0000003E E7F6            B                loopExp
   76 00000040         endexp
   77 00000040 9800            LDR              R0, [SP, #DEC]
   78 00000042 FBB0 F0F3       UDIV             R0, R0, R3
   79 00000046 F100 0030       ADD              R0, #0x30
   80 0000004A B51F            PUSH             {R0, R1, R2, R3, R4, LR}
   81 0000004C F7FF FFFE       BL               ST7735_OutChar ;output char
   82 00000050 E8BD 401F       POP              {R0, R1, R2, R3, R4, LR}
   83 00000054         
   84 00000054 F1A0 0030       SUB              R0, #0x30
   85 00000058 FB00 F003       MUL              R0, R3
   86 0000005C 9A00            LDR              R2, [SP, #DEC]
   87 0000005E EBA2 0200       SUB              R2, R0
   88 00000062 9200            STR              R2, [SP, #DEC]
   89 00000064         
   90 00000064 9901            LDR              R1, [SP, #COUNT]
   91 00000066 2900            CMP              R1, #0
   92 00000068 D000            BEQ              done
   93 0000006A E7D8            B                nextChar
   94 0000006C         
   95 0000006C         
   96 0000006C         done
   97 0000006C B002            ADD              SP, SP, #8
   98 0000006E         
   99 0000006E         
  100 0000006E 4770            BX               LR
  101 00000070         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
  102 00000070         
  103 00000070         ; -----------------------LCD _OutFix--------------------



ARM Macro Assembler    Page 3 


                       --
  104 00000070         ; Output characters to LCD display in fixed-point format
                       
  105 00000070         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
  106 00000070         ; Inputs:  R0 is an unsigned 32-bit number
  107 00000070         ; Outputs: none
  108 00000070         ; E.g., R0=0,    then output "0.000 "
  109 00000070         ;       R0=3,    then output "0.003 "
  110 00000070         ;       R0=89,   then output "0.089 "
  111 00000070         ;       R0=123,  then output "0.123 "
  112 00000070         ;       R0=9999, then output "9.999 "
  113 00000070         ;       R0>9999, then output "*.*** "
  114 00000070         ; Invariables: This function must not permanently modify
                        registers R4 to R11
  115 00000070         LCD_OutFix
  116 00000070         
  117 00000070         ;if R0>9999, print *.***
  118 00000070 F240 112F       MOV              R1, #303
  119 00000074 F04F 0221       MOV              R2, #33
  120 00000078 4603            MOV              R3, R0      ;store input in R3
  121 0000007A FB01 F102       MUL              R1, R1, R2
  122 0000007E 4288            CMP              R0, R1
  123 00000080 D923            BLS              nextOut
  124 00000082 F04F 002A       MOV              R0, #0x2A
  125 00000086 B51F            PUSH             {R0, R1, R2, R3, R4, LR}
  126 00000088 F7FF FFFE       BL               ST7735_OutChar ;output char
  127 0000008C E8BD 401F       POP              {R0, R1, R2, R3, R4, LR}
  128 00000090 F04F 002E       MOV              R0, #0x2E
  129 00000094 B51F            PUSH             {R0, R1, R2, R3, R4, LR}
  130 00000096 F7FF FFFE       BL               ST7735_OutChar ;output char
  131 0000009A E8BD 401F       POP              {R0, R1, R2, R3, R4, LR}
  132 0000009E F04F 002A       MOV              R0, #0x2A
  133 000000A2 B51F            PUSH             {R0, R1, R2, R3, R4, LR}
  134 000000A4 F7FF FFFE       BL               ST7735_OutChar ;output char
  135 000000A8 E8BD 401F       POP              {R0, R1, R2, R3, R4, LR}
  136 000000AC F04F 002A       MOV              R0, #0x2A
  137 000000B0 B51F            PUSH             {R0, R1, R2, R3, R4, LR}
  138 000000B2 F7FF FFFE       BL               ST7735_OutChar ;output char
  139 000000B6 E8BD 401F       POP              {R0, R1, R2, R3, R4, LR}
  140 000000BA F04F 002A       MOV              R0, #0x2A
  141 000000BE B51F            PUSH             {R0, R1, R2, R3, R4, LR}
  142 000000C0 F7FF FFFE       BL               ST7735_OutChar ;output char
  143 000000C4 E8BD 401F       POP              {R0, R1, R2, R3, R4, LR}
  144 000000C8 4770            BX               LR
  145 000000CA         
  146 000000CA         
  147 000000CA         
  148 000000CA         nextOut
  149 000000CA 4618            MOV              R0, R3      ;restore input into
                                                             R0
  150 000000CC B086            SUB              SP, #24
  151 000000CE         
  152 000000CE 9000            STR              R0, [SP, #DEC]
  153 000000D0 F44F 717A       MOV              R1, #1000
  154 000000D4 FBB0 F0F1       UDIV             R0, R1
  155 000000D8 9004            STR              R0, [SP, #INT3]
  156 000000DA FB00 F001       MUL              R0, R1
  157 000000DE 9A00            LDR              R2, [SP, #DEC]



ARM Macro Assembler    Page 4 


  158 000000E0 EBA2 0200       SUB              R2, R0
  159 000000E4 9200            STR              R2, [SP, #DEC]
  160 000000E6 F04F 0164       MOV              R1, #100
  161 000000EA FBB2 F2F1       UDIV             R2, R1
  162 000000EE 9203            STR              R2, [SP, #INT2]
  163 000000F0 FB02 F201       MUL              R2, R1
  164 000000F4 9800            LDR              R0, [SP, #DEC]
  165 000000F6 EBA0 0002       SUB              R0, R2
  166 000000FA 9000            STR              R0, [SP, #DEC]
  167 000000FC F04F 010A       MOV              R1, #10
  168 00000100 FBB0 F0F1       UDIV             R0, R1
  169 00000104 9002            STR              R0, [SP, #INT1]
  170 00000106 FB00 F001       MUL              R0, R1
  171 0000010A 9A00            LDR              R2, [SP, #DEC]
  172 0000010C EBA2 0200       SUB              R2, R0
  173 00000110 9201            STR              R2, [SP, #INT0]
  174 00000112         
  175 00000112         
  176 00000112 9804            LDR              R0, [SP, #INT3]
  177 00000114 F100 0030       ADD              R0, #0x30
  178 00000118 B51F            PUSH             {R0, R1, R2, R3, R4, LR}
  179 0000011A F7FF FFFE       BL               ST7735_OutChar ;output char
  180 0000011E E8BD 401F       POP              {R0, R1, R2, R3, R4, LR}
  181 00000122         
  182 00000122 F04F 002E       MOV              R0, #0x2E
  183 00000126 B51F            PUSH             {R0, R1, R2, R3, R4, LR}
  184 00000128 F7FF FFFE       BL               ST7735_OutChar ;output char
  185 0000012C E8BD 401F       POP              {R0, R1, R2, R3, R4, LR}
  186 00000130         
  187 00000130 9803            LDR              R0, [SP, #INT2]
  188 00000132 F100 0030       ADD              R0, #0x30
  189 00000136 B51F            PUSH             {R0, R1, R2, R3, R4, LR}
  190 00000138 F7FF FFFE       BL               ST7735_OutChar ;output char
  191 0000013C E8BD 401F       POP              {R0, R1, R2, R3, R4, LR}
  192 00000140         
  193 00000140 9802            LDR              R0, [SP, #INT1]
  194 00000142 F100 0030       ADD              R0, #0x30
  195 00000146 B51F            PUSH             {R0, R1, R2, R3, R4, LR}
  196 00000148 F7FF FFFE       BL               ST7735_OutChar ;output char
  197 0000014C E8BD 401F       POP              {R0, R1, R2, R3, R4, LR}
  198 00000150         
  199 00000150 9801            LDR              R0, [SP, #INT0]
  200 00000152 F100 0030       ADD              R0, #0x30
  201 00000156 B51F            PUSH             {R0, R1, R2, R3, R4, LR}
  202 00000158 F7FF FFFE       BL               ST7735_OutChar ;output char
  203 0000015C E8BD 401F       POP              {R0, R1, R2, R3, R4, LR}
  204 00000160         
  205 00000160         
  206 00000160         
  207 00000160 B006            ADD              SP, #24
  208 00000162         
  209 00000162 4770            BX               LR
  210 00000164         
  211 00000164                 ALIGN
  212 00000164         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  213 00000164         
  214 00000164                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned



ARM Macro Assembler    Page 5 


  215 00000164                 END                          ; end of file
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\print.
d -o.\print.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\
Inc\Luminary --list=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 17 in file Print.s
   Uses
      None
Comment: .text unused
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 35 in file Print.s
   Uses
      At line 14 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 00000070

Symbol: LCD_OutFix
   Definitions
      At line 115 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutFix used once
countloop 0000000A

Symbol: countloop
   Definitions
      At line 47 in file Print.s
   Uses
      At line 54 in file Print.s
Comment: countloop used once
done 0000006C

Symbol: done
   Definitions
      At line 96 in file Print.s
   Uses
      At line 92 in file Print.s
Comment: done used once
endexp 00000040

Symbol: endexp
   Definitions
      At line 76 in file Print.s
   Uses
      At line 71 in file Print.s
Comment: endexp used once
loopExp 0000002E

Symbol: loopExp
   Definitions
      At line 69 in file Print.s
   Uses
      At line 75 in file Print.s
Comment: loopExp used once
nextChar 0000001E

Symbol: nextChar



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 61 in file Print.s
   Uses
      At line 93 in file Print.s
Comment: nextChar used once
nextOut 000000CA

Symbol: nextOut
   Definitions
      At line 148 in file Print.s
   Uses
      At line 123 in file Print.s
Comment: nextOut used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

COUNT 00000004

Symbol: COUNT
   Definitions
      At line 21 in file Print.s
   Uses
      At line 42 in file Print.s
      At line 48 in file Print.s
      At line 50 in file Print.s
      At line 62 in file Print.s
      At line 64 in file Print.s
      At line 90 in file Print.s

DEC 00000000

Symbol: DEC
   Definitions
      At line 20 in file Print.s
   Uses
      At line 40 in file Print.s
      At line 77 in file Print.s
      At line 86 in file Print.s
      At line 88 in file Print.s
      At line 152 in file Print.s
      At line 157 in file Print.s
      At line 159 in file Print.s
      At line 164 in file Print.s
      At line 166 in file Print.s
      At line 171 in file Print.s

INT0 00000004

Symbol: INT0
   Definitions
      At line 23 in file Print.s
   Uses
      At line 173 in file Print.s
      At line 199 in file Print.s

INT1 00000008

Symbol: INT1
   Definitions
      At line 24 in file Print.s
   Uses
      At line 169 in file Print.s
      At line 193 in file Print.s

INT2 0000000C

Symbol: INT2
   Definitions
      At line 25 in file Print.s
   Uses
      At line 162 in file Print.s
      At line 187 in file Print.s

INT3 00000010




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: INT3
   Definitions
      At line 26 in file Print.s
   Uses
      At line 155 in file Print.s
      At line 176 in file Print.s

6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 12 in file Print.s
   Uses
      At line 81 in file Print.s
      At line 126 in file Print.s
      At line 130 in file Print.s
      At line 134 in file Print.s
      At line 138 in file Print.s
      At line 142 in file Print.s
      At line 179 in file Print.s
      At line 184 in file Print.s
      At line 190 in file Print.s
      At line 196 in file Print.s
      At line 202 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 13 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
347 symbols in table
